---
http_interactions:
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/directions/json?destination=1550%20S%20Potomac%20St,%20Aurora,%20CO%2080012&key=<GOOGLE_MAPS_API_KEY>&origin=12051%20E%20Arizona%20Ave.%20Aurora,%20CO%2080012&waypoints=12200%20E%20Mississippi%20Ave,%20Aurora,%20CO%2080012
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.8.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sat, 30 Dec 2023 04:30:20 GMT
      Pragma:
      - no-cache
      Expires:
      - Fri, 01 Jan 1990 00:00:00 GMT
      Cache-Control:
      - no-cache, must-revalidate
      Vary:
      - Accept-Language
      X-Goog-Maps-Metro-Area:
      - Denver, CO
      Server:
      - mafe
      Content-Length:
      - '14954'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=37
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 30 Dec 2023 04:30:20 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/directions/json?destination=200%20S%20Ironton%20St,%20Aurora,%20CO%2080012&key=<GOOGLE_MAPS_API_KEY>&origin=12051%20E%20Arizona%20Ave.%20Aurora,%20CO%2080012&waypoints=12200%20E%20Mississippi%20Ave,%20Aurora,%20CO%2080012
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.8.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sat, 30 Dec 2023 04:30:21 GMT
      Pragma:
      - no-cache
      Expires:
      - Fri, 01 Jan 1990 00:00:00 GMT
      Cache-Control:
      - no-cache, must-revalidate
      Vary:
      - Accept-Language
      X-Goog-Maps-Metro-Area:
      - Denver, CO
      Server:
      - mafe
      Content-Length:
      - '17251'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=116
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 30 Dec 2023 04:30:21 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/directions/json?destination=8580%20E%20Lowry%20Blvd,%20Denver,%20CO%2080230&key=<GOOGLE_MAPS_API_KEY>&origin=12051%20E%20Arizona%20Ave.%20Aurora,%20CO%2080012&waypoints=12200%20E%20Mississippi%20Ave,%20Aurora,%20CO%2080012
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.8.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sat, 30 Dec 2023 04:30:21 GMT
      Pragma:
      - no-cache
      Expires:
      - Fri, 01 Jan 1990 00:00:00 GMT
      Cache-Control:
      - no-cache, must-revalidate
      Vary:
      - Accept-Language
      X-Goog-Maps-Metro-Area:
      - Denver, CO
      Server:
      - mafe
      Content-Length:
      - '22462'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=62
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 30 Dec 2023 04:30:21 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/directions/json?destination=8580%20E%20Lowry%20Blvd,%20Denver,%20CO%2080230&key=<GOOGLE_MAPS_API_KEY>&origin=12051%20E%20Arizona%20Ave.%20Aurora,%20CO%2080012&waypoints=12051%20E%20Arizona%20Ave.%20Aurora,%20CO%2080012
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.8.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sat, 30 Dec 2023 04:30:21 GMT
      Pragma:
      - no-cache
      Expires:
      - Fri, 01 Jan 1990 00:00:00 GMT
      Cache-Control:
      - no-cache, must-revalidate
      Vary:
      - Accept-Language
      X-Goog-Maps-Metro-Area:
      - Denver, CO
      Server:
      - mafe
      Content-Length:
      - '16088'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=34
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 30 Dec 2023 04:30:21 GMT
recorded_with: VCR 6.2.0
